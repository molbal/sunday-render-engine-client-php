<?php
/**
 * UserloginrestApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Sunday\ArchiveClient
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Sunday Archive Service
 *
 * Sunday Archive Service
 *
 * OpenAPI spec version: 0.0.1-SNAPSHOT
 * Contact: molnar.balint@mdy.hu
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Sunday\ArchiveClient;

use \Sunday\ArchiveClient\Configuration;
use \Sunday\ArchiveClient\ApiClient;
use \Sunday\ArchiveClient\ApiException;
use \Sunday\ArchiveClient\ObjectSerializer;

/**
 * UserloginrestApiTest Class Doc Comment
 *
 * @category Class
 * @package  Sunday\ArchiveClient
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UserloginrestApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for authenticateUsingPOST
     *
     * Felhasználó beléptetése..
     *
     */
    public function testAuthenticateUsingPOST()
    {

    }

    /**
     * Test case for changePasswordUsingPOST
     *
     * Felhasználói jelszóváltoztatásra szolgáló függvény.
     *
     */
    public function testChangePasswordUsingPOST()
    {

    }

    /**
     * Test case for changeTypeUsingPOST
     *
     * Lecseréli egy felhasználó típusát. Típusok: NORMAL,     BANNED,     DELETED,     ADMIN.
     *
     */
    public function testChangeTypeUsingPOST()
    {

    }

    /**
     * Test case for createUserLoginUsingPOST
     *
     * Új felhasználó létrehozására szolgáló hívás..
     *
     */
    public function testCreateUserLoginUsingPOST()
    {

    }

    /**
     * Test case for fetchActiveUsersUsingGET
     *
     * Visszaadja a nem törölt felhasználók listáját. A page az oldalszám (0-től kezdődik) a pageLength pedig egy oldal hossza.
     *
     */
    public function testFetchActiveUsersUsingGET()
    {

    }

    /**
     * Test case for fetchAllUsersUsingGET
     *
     * Visszaadja a felhasználók listáját. A page az oldalszám (0-től kezdődik) a pageLength pedig egy oldal hossza.
     *
     */
    public function testFetchAllUsersUsingGET()
    {

    }

    /**
     * Test case for getUserIdUsingGET
     *
     * Visszaadja a userID-t email alapján.
     *
     */
    public function testGetUserIdUsingGET()
    {

    }

    /**
     * Test case for getUserTypeUsingGET
     *
     * Visszaadja a felhasználóhoz tartozó login típust.
     *
     */
    public function testGetUserTypeUsingGET()
    {

    }

}
